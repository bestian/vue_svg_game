{"version":3,"sources":["webpack:///src/components/src/components/FlyingObject.vue","webpack:///src/components/src/components/Canvas.vue"],"names":[],"mappings":"AAmMA,mBACA,GACA,uBACA,CACA,GACA,4BACA,CACA,CCtCA,SACA,qBACA,CAEA,OACA,iBAAA,CACA,KAAA,CACA,SACA","file":"chunk-5bee6ec9.a2cfb5c0.css","sourcesContent":["<template>\n  <g class=\"move\" :style=\"styleAnimation\">\n    <rect v-show=\"type == 'gift'\"\n      :x=\"x\"\n      :y=\"y\"\n      :width=\"rx * 2\"\n      :height=\"ry * 8\"\n      :style=\"styleGift\"\n    />\n    <rect v-show=\"type == 'ufo' || type == 'boss' \"\n      :x=\"x-rx*0.75\"\n      :y=\"y\"\n      :width=\"rx * 1.5\"\n      :height=\"ry * 1\"\n      :style=\"styleBase[life]\"\n    />\n    <ellipse v-show=\"life > 2 && (type == 'ufo' || type == 'boss') \"\n      :cx=\"x - 30\"\n      :cy=\"y + 20\"\n      :rx=\"rx - 35 + life\"\n      :ry=\"ry + 20 + life\"\n      :style=\"styleBase[life]\"\n    />\n    <ellipse v-show=\"life > 0 && (type == 'ufo' || type == 'boss') \"\n      :cx=\"x - 10\"\n      :cy=\"y + 20\"\n      :rx=\"rx - 35 + life\"\n      :ry=\"ry + 20 + life\"\n      :style=\"styleBase[life]\"\n    />\n    <ellipse v-show=\"life > 1 && (type == 'ufo' || type == 'boss') \"\n      :cx=\"x + 10\"\n      :cy=\"y + 20\"\n      :rx=\"rx - 35 + life\"\n      :ry=\"ry + 20 + life\"\n      :style=\"styleBase[life]\"\n    />\n    <ellipse v-show=\"life > 3 && (type == 'boss' || type == 'boss') \"\n      :cx=\"x + 30\"\n      :cy=\"y + 20\"\n      :rx=\"rx - 35 + life\"\n      :ry=\"ry + 20 + life\"\n      :style=\"styleBase[life]\"\n    />\n    <g v-if = \"type == 'ufo' || type == 'boss' \">\n      <rect v-for = \"(s,idx) in shapes\"\n        :key = \"idx\"\n        :style=\"styleTop[life]\"\n        :x=\"x + s[0]\"\n        :y=\"y + s[1]\"\n        :width=\"12\"\n        :height=\"12\"\n      />\n    </g>\n  </g>\n</template>\n\n<script>\nimport { pathFromBezierCurve } from '../utils/formula'\n\nconst baseWith = 40\nconst halfBase = baseWith / 2\nconst height = 25\n\nexport default {\n  name: 'FlyingObject',\n  props: {\n    x: {\n      type: Number,\n      required: true,\n      default: 0\n    },\n    y: {\n      type: Number,\n      required: true,\n      default: 0\n    },\n    type: {\n      type: String,\n      required: true,\n      default: 'ufo'\n    },\n    life: {\n      type: Number,\n      required: true,\n      default: 1\n    }\n  },\n  data () {\n    return {\n      shapes: [\n        [-36, -36], [-24, -36], [-12, -36], [0, -36], [12, -36], [24, -36],\n        [-36, -24], [-12, -24], [0, -24], [24, -24],\n        [-36, -12], [-24, -12], [-12, -12], [0, -12], [12, -12], [24, -12]\n      ],\n      rx: 40,\n      ry: 10,\n      styleGift: {\n        fill: '#ffff47',\n        // fill: '#979797',\n        stroke: '#5c5c5c'\n      },\n      styleBase: [\n        {\n          fill: '#cf0000',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf9999',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf6666',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf3333',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf0000',\n          stroke: '#5c5c5c'\n        }\n      ],\n      styleTop: [\n        {\n          fill: '#cf0000',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf9999',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf6666',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf3333',\n          stroke: '#5c5c5c'\n        },\n        {\n          fill: '#cf0000',\n          stroke: '#5c5c5c'\n        }\n      ]\n    }\n  },\n  computed: {\n    cubicBezierCurve () {\n      return {\n        initialAxis: {\n          x: this.x - halfBase,\n          y: this.y\n        },\n        initialControlPoint: {\n          x: 10,\n          y: -height\n        },\n        endingControlPoint: {\n          x: 30,\n          y: -height\n        },\n        endingAxis: {\n          x: baseWith,\n          y: 0\n        }\n      }\n    },\n    path () {\n      return pathFromBezierCurve(this.cubicBezierCurve)\n    },\n    styleAnimation () {\n      return {\n        animation: 'ufoMove ' + this.$store.state.ufo_animation_time / 1000 + 's linear'\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  @keyframes ufoMove {\n    0% {\n      transform: translateY(0);\n    }\n    100% {\n      transform: translateY(1200px);\n    }\n  }\n  /*.move {*/\n    /*animation: ufoMove 4s linear;*/\n  /*}*/\n</style>\n","<template>\n  <div>\n    <svg ref=\"svg\"\n         id=\"my-game\"\n         :viewBox=\"viewBox\"\n         @mousemove=\"onMouseMove\"\n         @click=\"onClick\">\n      <defs>\n        <filter id=\"shadow\">\n          <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\"/>\n        </filter>\n      </defs>\n      <Sky/>\n      <Ground/>\n      <CannonBase/>\n      <CannonBall\n        v-for=\"cannonBall in cannonBalls\"\n        :key=\"cannonBall.id\"\n        :x=\"cannonBall.x\"\n        :y=\"cannonBall.y\"\n        :angle=\"cannonBall.angle\"/>\n      <CannonPipe :angle=\"canonAngle\"/>\n      <CurrentScore :score=\"currentScore\"/>\n      <Heart\n        v-for=\"heart in hearts\"\n        :key=\"heart.id\"\n        :x=\"heart.x\"\n        :y=\"heart.y\"/>\n\n      <g v-if=\"!gameStarted && gameWin\">\n        <WinGame @start-game=\"startGame\"/>\n        <Title/>\n      </g>\n\n      <g v-if=\"!gameStarted && !gameWin\">\n        <StartGame @start-game=\"startGame\" :lang=\"lang\"/>\n        <Title :lang=\"lang\"/>\n      </g>\n\n      <g v-if=\"gameStarted\">\n        <FlyingObject\n          v-for=\"ufo in flyingObjects\"\n          :key=\"ufo.id\"\n          :type=\"ufo.type\"\n          :life=\"ufo.life\"\n          :x=\"ufo.x\"\n          :y=\"ufo.y\"/>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport Sky from './Sky'\nimport Ground from './Ground'\nimport CannonBase from './CannonBase'\nimport CannonPipe from './CannonPipe'\nimport CannonBall from './CannonBall'\nimport CurrentScore from './CurrentScore'\nimport FlyingObject from './FlyingObject'\nimport Title from './Title'\nimport StartGame from './StartGame'\nimport WinGame from './WinGame'\nimport Heart from './Heart'\nimport { getCanvasPosition } from '../utils/formula'\nimport { GAME_HEIGHT } from '../utils/constants'\nimport BaseObject from '../classes/BaseObject'\n\nconst viewBox = [window.innerWidth / -2, 100 - GAME_HEIGHT, window.innerWidth, GAME_HEIGHT]\nconst HEART_START_Y = 35\nconst HEART_START_X = -70\nconst HEART_MARGIN = 30\nexport default {\n  name: 'Canvas',\n  components: {\n    Sky,\n    Ground,\n    CannonBase,\n    CannonPipe,\n    CannonBall,\n    CurrentScore,\n    FlyingObject,\n    Title,\n    StartGame,\n    WinGame,\n    Heart\n  },\n  props: ['lang'],\n  data () {\n    return {\n      viewBox: viewBox,\n      canvasMousePosition: {\n        x: 50,\n        y: -100\n      }\n    }\n  },\n  computed: {\n    canonAngle () {\n      return this.$store.state.canonAngle\n    },\n    currentScore () {\n      return this.$store.state.kills\n    },\n    gameStarted () {\n      return this.$store.state.started\n    },\n    gameWin () {\n      return this.$store.state.win\n    },\n    flyingObjects () {\n      return this.$store.state.flyingObjects\n    },\n    cannonBalls () {\n      return this.$store.state.cannonBalls\n    },\n    hearts () {\n      const arr = []\n      for (let i = 0; i < this.$store.state.lives; i++) {\n        arr.push(new BaseObject(HEART_START_X - (i * HEART_MARGIN), HEART_START_Y))\n      }\n      return arr\n    }\n  },\n  methods: {\n    onMouseMove (event) {\n      const svgElem = this.$refs.svg\n      this.canvasMousePosition = getCanvasPosition(event, svgElem)\n    },\n    startGame (ch) {\n      // console.log(ch)\n      this.$store.dispatch('startGame', ch)\n    },\n    onClick () {\n      this.$store.dispatch('shoot', this.canvasMousePosition)\n    }\n  },\n  mounted () {\n    const vm = this\n    setInterval(() => {\n      vm.$store.dispatch('moveObjects', vm.canvasMousePosition)\n    }, 10)\n    window.onresize = () => {\n      const cnv = document.getElementById('my-game')\n      cnv.style.width = `${window.innerWidth}px`\n      cnv.style.height = `${window.innerHeight}px`\n    }\n    window.onresize()\n  }\n}\n</script>\n\n<style>\n  #my-game {\n    border: 1px solid black;\n  }\n\n  select {\n    position: absolute;\n    top: 0;\n    left: 45vw;\n  }\n</style>\n"]}